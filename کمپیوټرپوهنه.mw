'Computer science''' (or '''computing science''') is the study of the theoretical foundations of [[information]] and [[computation]], and of practical techniques for their implementation and application in [[computer]] systems.<ref>"''Computer science is the study of information''" [http://www.njit.edu/v2/archivecatalog/undergraduate/91/19-und.html New Jersey Institute of Technology], Gutenberg Information Technologies</ref><ref>"''Computer science is the study of computation.''" [http://www.csbsju.edu/computerscience/curriculum Computer Science Department, College of Saint Benedict], Saint John's University</ref><ref>"''Computer Science is the study of all aspects of computer systems, from the theoretical foundations to the very practical aspects of managing large software projects.''" [http://study.massey.ac.nz/major.asp?major_code=2010&prog_code=93068 Massey University]</ref> It is frequently described as the systematic study of [[algorithm]]ic processes that create, describe and transform information. According to [[Peter J. Denning]], the fundamental question underlying computer science is, ''"What can be (efficiently) automated?"''<ref name="Denning_cs_discipline">{{cite journal | last=Denning | first=P.J. | authorlink=Peter J. Denning | year=2000 | title=Computer Science: The Discipline | url=http://web.archive.org/web/20060525195404/http://www.idi.ntnu.no/emner/dif8916/denning.pdf | journal=Encyclopedia of Computer Science|format=PDF}}</ref> Computer science has many [[List of computer science fields|sub-fields]]; some, such as [[computer graphics]], emphasize the computation of specific results, while others, such as [[computational complexity theory]], study the properties of [[computational problem]]s. Still others focus on the challenges in implementing computations. For example, [[programming language theory]] studies approaches to describing computations, while [[computer programming]] applies specific [[programming language]]s to solve specific computational problems, and [[human-computer interaction]] focuses on the challenges in making computers and computations useful, usable, and universally accessible to [[humans|people]].

The general public sometimes confuses computer science with vocational areas that deal with computers (such as [[information technology]]), or think that it relates to their own experience of computers, which typically involves activities such as gaming, web-browsing, and word-processing. However, the focus of computer science is more on understanding the properties of the programs used to implement software such as games and web-browsers, and using that understanding to create new programs or improve existing ones.<ref>"''Common myths and preconceptions about Cambridge Computer Science''" [http://www.cl.cam.ac.uk/admissions/undergraduate/myths/ Computer Science Department], [[University of Cambridge]]</ref>

== History ==
{{Wikiversity|computing}}
{{main | History of computer science}}
The early foundations of what would become computer science predate the invention of the modern [[digital computer]]. Machines for calculating fixed numerical tasks, such as the [[abacus]], have existed since antiquity. [[Wilhelm Schickard]] built the first mechanical calculator in 1623.<ref>{{cite web|author=Nigel Tout|title=Calculator Timeline|url=http://www.vintagecalculators.com/html/calculator_time-line.html|work=Vintage Calculator Web Museum|year=2006|accessdate=2006-09-18}}</ref> [[Charles Babbage]] designed a [[difference engine]] in [[Victorian era|Victorian]] times<ref>{{cite web | url=http://www.sciencemuseum.org.uk/on-line/babbage/index.asp | title=Science Museum - Introduction to Babbage | accessdate=2006-09-24}}</ref> helped by [[Ada Lovelace]].<ref>{{cite web| url=http://www.scottlan.edu/Lriddle/women/ada-love.htm| title=A Selection and Adaptation From Ada's Notes found in "Ada, The Enchantress of Numbers," by Betty Alexandra Toole Ed.D. Strawberry Press, Mill Valley, CA | accessdate=2006-05-04}}</ref> Around 1900, [[Key punch|punch-card machines]]<ref>{{cite web | url=http://www.pattonhq.com/ibm.html | title=IBM Punch Cards in the U.S. Army | accessdate=2006-09-24}}</ref> were introduced. However, all of these machines were constrained to perform a single task, or at best some subset of all possible tasks.

During the 1940s, as newer and more powerful computing machines were developed, the term ''computer'' came to refer to the machines rather than their human predecessors. As it became clear that computers could be used for more than just mathematical calculations, the field of computer science broadened to study [[computation]] in general. Computer science began to be established as a distinct academic discipline in the 1950s and early 1960s, with the creation of the first computer science departments and degree programs.<ref name="Denning_cs_discipline"/><ref>http://www.cl.cam.ac.uk/conference/EDSAC99/statistics.html</ref>  Since practical computers became available, many applications of computing have become distinct areas of study in their own right.

Although many initially believed it impossible that computers themselves could actually be a scientific field of study, in the late fifties it gradually became accepted among the greater academic population.<ref name="Levy1984">{{cite book | authorlink = Steven Levy | last = Levy | first = Steven | title = [[Hackers: Heroes of the Computer Revolution]] | year = 1984 | isbn = 0-385-19195-2 | publisher = Doubleday }}</ref> It is the now well-known [[IBM]] brand that formed part of the computer science revolution during this time. IBM (short for International Business Machines) released the IBM 704 and later the IBM 709 computers, which were widely used during the exploration period of such devices. "Still, working with the IBM [computer] was frustrating...if you had misplaced as much as one letter in one instruction, the program would crash, and you would have to start the whole process over again".<ref name="Levy1984"/> During the late 1950s, the computer science discipline was very much in its developmental stages, and such issues were commonplace.

Time has seen significant improvements in the usability and effectiveness of computer science technology. Modern society has seen a significant shift from computers being used solely by experts or professionals to a more widespread user base.

== Major achievements ==

{{Expand-section|date=June 2008}}

[[Image:Enigma.jpg|170px|thumbnail|right|The [[Germany|German]] military used the [[Enigma machine]] during [[World War II]] for communication they thought to be secret. The large-scale decryption of Enigma traffic at [[Bletchley Park]] was an important factor that contributed to Allied victory in WWII.<ref name="kahnbook" />]]

Despite its short history as a formal academic discipline, computer science has made a number of fundamental contributions to [[science]] and [[society]]. These include:
* Started the "digital revolution", which includes the current [[Information Age]] and the [[Internet]].<ref name="bgu">http://www.cis.cornell.edu/Dean/Presentations/Slides/bgu.pdf</ref>
* A formal definition of [[computation]] and [[computability]], and proof that there are computationally [[Undecidable problem|unsolvable]] and [[Intractable#Intractability|intractable]] problems.<ref>{{cite paper | author=Constable, R.L. | date=March 2000 | url=http://www.cs.cornell.edu/cis-dean/bgu.pdf | title=Computer Science: Achievements and Challenges circa 2000|format=PDF}}</ref>
* The concept of a [[programming language]], a tool for the precise expression of methodological information at various levels of abstraction.<ref>{{cite book
| last=Abelson
| first=H.
| authorlink=Hal Abelson
| coauthors=G.J. Sussman with J. Sussman
| year=1996
| title=Structure and Interpretation of Computer Programs
| edition=2nd
| publisher=MIT Press
| isbn=0-262-01153-0
| quote=The computer revolution is a revolution in the way we think and in the way we express what we think. The essence of this change is the emergence of what might best be called ''procedural epistemology'' — the study of the structure of knowledge from an imperative point of view, as opposed to the more declarative point of view taken by classical mathematical subjects.
}}</ref>
* In [[cryptography]], [[Cryptanalysis of the Enigma|breaking the Enigma machine]] was an important factor contributing to the Allied victory in World War II.<ref name="kahnbook">[[David Kahn]], [[The Codebreakers]], 1967, ISBN 0-684-83130-9.</ref>
* [[Scientific computing]] enabled advanced study of the mind, and mapping the human genome became possible with [[Human Genome Project]].<ref name="bgu"/> [[Distributed computing]] projects such as [[Folding@home]] explore [[protein folding]].
* [[Algorithmic trading]] has increased the [[Economic efficiency|efficiency]] and [[Market liquidity|liquidity]] of financial markets by using [[artificial intelligence]], [[machine learning]], and other [[statistics|statistical]] and [[Numerical analysis|numerical]] techniques on a large scale.<ref>[http://www.telegraph.co.uk/money/main.jhtml?xml=/money/2006/08/27/ccsoft27.xml Black box traders are on the march] The Telegraph, August 26, 2006</ref>

== Fields of computer science ==
As a discipline, computer science spans a range of topics from theoretical studies of algorithms and the limits of computation to the practical issues of implementing computing systems in hardware and software.<ref name="CSAB1997">{{cite web|author=Computing Sciences Accreditation Board|title=Computer Science as a Profession|url=http://www.csab.org/comp_sci_profession.html |date=28 May 1997| accessdate=2008-09-01}}</ref><ref>{{cite book|author=Committee on the Fundamentals of Computer Science: Challenges and Opportunities, National Research Council |title=Computer Science: Reflections on the Field, Reflections from the Field|url=http://www.nap.edu/catalog.php?record_id=11106#toc|publisher=National Academies Press|isbn=978-0-309-09301-9|date=2004}}</ref>
The Computer Sciences Accreditation Board (CSAB) – which is made up of representatives of the [[Association for Computing Machinery]] (ACM), the [[Institute of Electrical and Electronics Engineers]] Computer Society, and the [[Association for Information Systems]] – identifies four areas that it considers crucial to the discipline of computer science: ''theory of computation'', ''algorithms and data structures'', ''programming methodology and languages'', and ''computer elements and architecture''. In addition to these four areas, CSAB also identifies fields such as software engineering, artificial intelligence, computer networking and communication, database systems, parallel computation, distributed computation, computer-human interaction, computer graphics, operating systems, and numerical and symbolic computation as being important areas of computer science.<ref name="CSAB1997"/>

=== Theoretical computer science ===
The broader field of [[theoretical computer science]] encompasses both the classical theory of computation and a wide range of other topics that focus on the more abstract, logical, and mathematical aspects of computing.
:{| style="border:1px solid #ddd; text-align:center; margin: auto;" cellspacing="15"
|  <math> P \rightarrow Q \,</math>
|| [[Image:DFAexample.svg|96px]]
|| [[Image:Elliptic curve simple.png|96px]]
|| [[Image:6n-graf.svg|96px]]
|| <math>\Gamma\vdash x: Int</math>
|| [[Image:Commutative diagram for morphism.svg|96px]]
|| [[Image:SimplexRangeSearching.png|96px]]
|| [[Image:Blochsphere.svg|96px]]
|-
|  [[Mathematical logic]]
|| [[Automata theory]]
|| [[Number theory]]
|| [[Graph theory]]
|| [[Type theory]]
|| [[Category theory]]
|| [[Computational geometry]]
|| [[Quantum computer|Quantum computing theory]]
|}

==== Theory of computation ====
The study of the [[theory of computation]] is focused on answering fundamental questions about what can be computed and what amount of resources are required to perform those computations. In an effort to answer the first question, [[Computability theory (computer science)|computability theory]] examines which computational problems are solvable on various theoretical [[models of computation]]. The second question is addressed by [[computational complexity theory]], which studies the time and space costs associated with different approaches to solving a computational problem. 

The famous "[[P = NP problem|P=NP?]]" problem, one of the [[Millennium Prize Problems]],<ref>[http://www.claymath.org/millennium/P_vs_NP/ Clay Mathematics Institute] P=NP</ref> is an open problem in the theory of computation.

:{| style="border:1px solid #ddd; text-align:center; margin: auto;" cellspacing="15"
| [[Image:Wang tiles.png|96px]]
|| '''P = NP''' ?
|-
|  [[Computability theory (computer science)|Computability theory]]
|| [[Computational complexity theory]]
|}

=== د الګوريتومونو او اومتوكو جوړښت ===
:{| style="border:1px solid #ddd; text-align:center; margin: auto;" cellspacing="15"
|  <math>O(n^2)</math>
|| [[Image:Sorting quicksort anim.gif|96px]]
|| [[Image:Singly linked list.png|96px]]
|-
|  [[د الګوريتم شننه]]
|| [[الګوريتمونه]]
|| [[د اومتوك جوړښت]]
|}

=== خپرنيز ليلپوهنه او ژپې ===
:{| style="border:1px solid #ddd; text-align:center; margin: auto;" cellspacing="15"
|  [[Image:Ideal compiler.png|96px]]
|| [[Image:Python add5 syntax.svg|96px]]
|-
|  [[ژباړني]]
|| [[خپرونيزې ژبې]]
|}

=== Computer elements and architecture ===
:{| style="border:1px solid #ddd; text-align:center; margin: auto;" cellspacing="15"
|  [[Image:NOR ANSI.svg|96px]]
|  [[Image:Fivestagespipeline.png|96px]]
|  [[Image:SIMD.svg|96px]]
|-
|  [[ګڼيال سوليز]]
|  [[Microarchitecture]]
|  [[ګڼبهيريز]]
|}

=== شميريزه او پيلاميزه شميرنه ===
:{| style="border:1px solid #ddd; text-align:center; margin: auto;" cellspacing="15"
|  [[Image:1u04-argonaute.png|96px]]
|| [[Image:User-FastFission-brain.gif|96px]]
|| [[Image:Naphthalene-3D-balls.png|96px]]
|| [[Image:Neuron-no labels.png|96px]]
|| [[Image:X-43A (Hyper - X) Mach 7 computational fluid dynamic (CFD).jpg|96px]]
|| [[Image:Wind-particle.png|96px]]
|| <math>y = \sin(x) + c</math>
|-
|  [[Bioinformatics]]
|| [[Cognitive Science]]
|| [[شميريزه كيميا]]
|| [[Computational neuroscience]]
|| [[شميرزه پږنپوهنه]]
|| [[Numerical analysis|شميريز الګورنيتم]]
|| [[شميرپوهنيز پيلاميال]]
|}

=== كاريالونه ===
The following disciplines are often studied from a more theoretical, computer science viewpoint, as well as from a more practical, engineering perspective.

:{| style="border:1px solid #ddd; text-align:center; margin: auto;" cellspacing="15"
|  [[Image:Operating system placement.svg|96px]]
|| [[Image:NETWORK-Library-LAN.png|96px]]
|| [[Image:5-cell.gif|96px]]
|| [[Image:Corner.png|96px]]
|| [[Image:Emp Tables (Database).PNG|96px]]
|-
|  [[چليز غونډال]]
|| [[Computer networking|سولګر جالونه]]
|| [[سولګر كښنيز]]
|| [[سولګر ليد]]
|| [[توكبنسټونه]]
|-
|  [[Image:Padlock.svg|96px]]
|| [[Image:ArtificialFictionBrain.png|96px]]
|| [[Image:Roomba original.jpg|96px]]
|| [[Image:Wacom Pen-tablet.jpg|96px]]
||<!-- Image with inadequate rationale removed:  [[Image:IPhone EDGE and 3G.png|96px]] -->
|-
|  [[سولګر خونديتوب]]
|| [[Artificial intelligence]]
|| [[Robotics]]
|| [[Human–computer interaction]]
|| [[Ubiquitous computing]]
|}

== تړاو يي د نورو ډګړونو سره ==
Despite its name, a significant amount of computer science does not involve the study of computers themselves. Because of this, several alternative names have been proposed. Certain departments of major universities prefer the term ''computing science'', to emphasize precisely that difference. Danish scientist [[Peter Naur]] suggested the term ''datalogy'', to reflect the fact that the scientific discipline revolves around data and data treatment, while not necessarily involving computers. The first scientific institution to use the term was the Department of Datalogy at the University of Copenhagen, founded in 1969, with Peter Naur being the first professor in datalogy. The term is used mainly in the Scandinavian countries. Also, in the early days of computing, a number of terms for the practitioners of the field of computing were suggested in the ''Communications of the ACM'' – ''turingineer'', ''turologist'', ''flow-charts-man'', ''applied meta-mathematician'', and ''applied epistemologist''.<ref>Communications of the ACM 1(4):p.6</ref>  Three months later in the same journal, ''comptologist'' was suggested, followed next year by ''hypologist''.<ref>Communications of the ACM 2(1):p.4</ref>  The term ''computics'' has also been suggested.<ref>IEEE Computer 28(12):p.136</ref> ''Informatik'' was a term used in Europe with more frequency.

The renowned computer scientist [[Edsger W. Dijkstra|Edsger Dijkstra]] stated, "Computer science is no more about computers than astronomy is about telescopes." The design and deployment of computers and computer systems is generally considered the province of disciplines other than computer science. For example, the study of [[computer hardware]] is usually considered part of [[computer engineering]], while the study of commercial [[computer system]]s and their deployment is often called [[information technology]] or [[information systems]]. However, there has been much cross-fertilization of ideas between the various computer-related disciplines. Computer science research has also often crossed into other disciplines, such as [[cognitive science]], [[economics]], [[mathematics]], [[physics]] (see [[quantum computing]]), and [[linguistics]].

Computer science is considered by some to have a much closer relationship with [[mathematics]] than many scientific disciplines, with some observers saying that computing is a mathematical science.<ref name="Denning_cs_discipline" /> Early computer science was strongly influenced by the work of mathematicians such as [[Kurt Gödel]] and [[Alan Turing]], and there continues to be a useful interchange of ideas between the two fields in areas such as [[mathematical logic]], [[category theory]], [[domain theory]], and [[algebra]].

The relationship between computer science and [[software engineering]] is a contentious issue, which is further muddied by [[Debates within software engineering|disputes]] over what the term "software engineering" means, and how computer science is defined. [[David Parnas]], taking a cue from the relationship between other engineering and science disciplines, has claimed that the principal focus of computer science is studying the properties of computation in general, while the principal focus of software engineering is the design of specific computations to achieve practical goals, making the two separate but complementary disciplines.<ref>{{cite journal | last = Parnas
| first = David L.
| authorlink = David Parnas
| year = 1998
| title = [http://citeseer.ist.psu.edu/parnas98software.html Software Engineering Programmes are not Computer Science Programmes]
| journal = Annals of Software Engineering
| volume = 6
| pages = 19–37
| doi = 10.1023/A:1018949113292
}}, p. 19: "Rather than treat software engineering as a subfield of computer science, I treat it as an element of the set, Civil Engineering, Mechanical Engineering, Chemical Engineering, Electrical Engineering, .."</ref>

The academic, political, and funding aspects of computer science tend to depend on whether a department formed with a mathematical emphasis or with an engineering emphasis. Computer science departments with a mathematics emphasis and with a numerical orientation consider alignment [[computational science]]. Both types of departments tend to make efforts to bridge the field educationally if not across all research.

== د سولګر پوهنې زده ګړه ==
Some universities teach computer science as a theoretical study of computation and algorithmic reasoning. These programs often feature the [[theory of computation]], [[analysis of algorithms]], [[formal methods]], [[Concurrency (computer science)|concurrency theory]], [[databases]], [[computer graphics]] and [[systems analysis]], among others. They typically also teach [[computer programming]], but treat it as a vessel for the support of other fields of computer science rather than a central focus of high-level study.

Other colleges and universities, as well as [[secondary school]]s and vocational programs that teach computer science, emphasize the practice of advanced programming rather than the theory of algorithms and computation in their computer science curricula. Such curricula tend to focus on those skills that are important to workers entering the software industry. The practical aspects of computer programming are often referred to as [[software engineering]]. However, there is a lot of [[Debates within software engineering|disagreement]] over the meaning of the term, and whether or not it is the same thing as programming.

== دا هم وګورئ ==
*[[سولګر]]
*[[كمپېوټر پوهنه څه ده؟]]
*[[پاور ټايز یانې څه؟]]
*[[دويال غونډالونه]]
*[[چليز غونډالونه ]]
*[[ګڼياله وېډيويي كامره]]
*[[ډېټا بېس څه شى دى]]

== د نورو لوستلو لپاره ==
* [[Association for Computing Machinery]]. [http://www.acm.org/class/1998/overview.html 1998 ACM Computing Classification System]. 1998.
* [[IEEE Computer Society]] and the [[Association for Computing Machinery]]. [http://www.computer.org/portal/cms_docs_ieeecs/ieeecs/education/cc2001/cc2001.pdf Computing Curricula 2001: Computer Science]. December 15, 2001.
* [[Peter J. Denning]]. ''[http://portal.acm.org/citation.cfm?id=1053309&coll=&dl=ACM&CFID=15151515&CFTOKEN=6184618 Is computer science science?]'', Communications of the ACM, April 2005.
* [[Donald E. Knuth]]. ''Selected Papers on Computer Science,'' CSLI Publications, Cambridge Univ. Press, 1996.
* [[Peter J. Denning]], ''[http://portal.acm.org/citation.cfm?id=971303&dl=ACM&coll=&CFID=15151515&CFTOKEN=6184618 Great principles in computing curricula]'', Technical Symposium on Computer Science Education, 2004.

== باندنۍ تړني ==


* [http://www.lecturefox.com/computerscience/ په سولګر پوهنه كي د خپلواكو پوهنتونو لارښود] 
* [http://videolectures.net/Top/Computer_Science/ د سولګر پوهني د لوستونو ټولګه]
* [http://liinwww.ira.uka.de// په سولګر پوهنه د كتابپيژندلو ټولګې]
* [http://csdir.org/ CS لارښوني او سرچيني]
* [http://se.ethz.ch/~meyer/انځورغالى/ د سولګر پوهني انځورونه] ([[Bertrand Meyer]]'s انځورغالى)
ter_Science}}

{{DEFAULTSORT:Computer Science}}
[[Category:Computer science| ]]
